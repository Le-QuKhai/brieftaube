name: Build, Package, and Deploy to VM

on:
  push:
    branches:
      - main
  workflow_dispatch:
  repository_dispatch:
      types: [ trigger-submodule-deploy ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository with submodules
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Pull latest changes in submodule (master)
        run: |
          git submodule update --init --recursive
          cd pigeonhole_frontend
          git remote set-url https://github.com/brieftaube-haw/pigeonhole_frontend.git
          git fetch origin
          git checkout master
          git pull origin master

      - name: Verify Frontend Files Exist
        run: ls -laR pigeonhole_frontend

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build Backend Project with Gradle
        run: ./gradlew build

      - name: Prepare Deployment Package
        run: |
          mkdir -p deployment
          cp build/libs/app.jar deployment/
          cp docker-compose.yml deployment/
          cp Dockerfile deployment/
          cp Dockerfile.proxy deployment/
          cp brieftaube.conf deployment/
          cp -r pigeonhole_frontend deployment/

      - name: Copy Deployment Package to Server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          proxy_host: usershell.informatik.haw-hamburg.de
          proxy_username: infwax193
          proxy_key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "deployment"
          target: "/home/${{ secrets.VM_USERNAME }}/brieftaube"
          rm: true

      - name: Deploy on Server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          proxy_host: usershell.informatik.haw-hamburg.de
          proxy_username: infwax193
          proxy_key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /home/${{ secrets.VM_USERNAME }}/brieftaube/deployment
            docker compose down 
            docker compose build --no-cache
            docker compose up -d
            echo "âœ… Deployment Finished."