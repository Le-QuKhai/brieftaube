name: Build, Test and Deploy to University VM via Jump Host

on:
  push:
    branches:
      - fVMproxy

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Make Gradle wrapper executable
        run: chmod +x ./gradlew

      - name: Build and Test the project
        run: ./gradlew build # The 'build' task usually runs 'test' automatically

      - name: ðŸš€ Deploy to VM via Jump Host
        uses: appleboy/ssh-action@v1.0.3
        with:
          # --- Final VM Credentials ---
          host: ${{ secrets.VM_HOST }} # e.g., 192.168.1.100 or your VM's hostname
          username: ${{ secrets.VM_USERNAME }} # e.g., 'uncleruckus' on the VM
          key: ${{ secrets.SSH_PRIVATE_KEY }} # The private key for the FINAL VM

          # --- Jump Host (Proxy) Credentials ---
          proxy_host: usershell.informatik.haw-hamburg.de
          proxy_username: infwax193
          proxy_key: ${{ secrets.SSH_PRIVATE_KEY }}

          # --- Script to run on the FINAL VM ---
          script: |
            # 1. Create a temporary directory on the VM
            mkdir -p /home/${{ secrets.VM_USERNAME }}/brieftaube-temp
            
            # 2. Copy the essential files from the GitHub Runner to the VM's temp directory
            #    We are copying only what's needed, not the whole repository.
            scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -r build/libs/*.jar docker-compose.yml .env ${{ secrets.VM_USERNAME }}@${{ secrets.VM_HOST }}:/home/${{ secrets.VM_USERNAME }}/brieftaube-temp/
            
            # 3. Stop old containers, replace files, and start new containers
            cd /home/${{ secrets.VM_USERNAME }}/
            if [ -d "brieftaube" ]; then
              cd brieftaube
              echo "Shutting down existing services..."
              docker compose down --volumes
              cd ..
              rm -rf brieftaube
            fi
            
            echo "Deploying new version..."
            mv brieftaube-temp brieftaube
            cd brieftaube

            echo "Building and starting new services..."
            docker compose build --no-cache
            docker compose up -d
            
            echo "âœ… Deployment complete!"